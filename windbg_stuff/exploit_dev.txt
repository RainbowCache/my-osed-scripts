.load narly
!nmod -> View protections for each module.

!teb
s -b <STACK_END> <STACK_BASE> 41 41 41 -> Search for bytes 41 41 41 in the stack

dds esp L10 -> List potential pointers near esp
s -a 0 L8000000 KUPOKUPO -> Search for the KUPOKUPO string in all memory.

!peb -> The PEB.

dt nt!_TEB @$teb -> The TEB detailed.
dt nt!_PEB @$peb -> The PEB detailed.

dt _LDR_DATA_TABLE_ENTRY (<ADDRESS> - 0x10) -> Take LDR linked list address from PEB and get module details.

dt nt!_IMAGE_DOS_HEADER <ADDRESS> -> The base address of an image's DOS header. e_lfanew contains the offset to the PE header.
dt -r ntdll!_IMAGE_NT_HEADERS (<ADDRESS> + e_lfanew) -> Dump the PE header.

!dh <ADDRESS> -> Dump image data from the base address of the image's DOS header.

poi(<ADDRESS>) -> Pointer resolution.

BP wsock32!recv -> Set a breakpoint when receiving data via winsock.

lm m <Module> -> List module about a specific module like KERNEL32.

ba r1 <address> -> Set a hardware read breakpoint on an address. Useful in reverse engineering.

r <zf/of/sf/cf> -> Check the zero, overflow, sign flag, and carry flag.

!vprot eip -> View memory protections at EIP.
!vprot esp -> View memory protections on stack.

.load pykd
!py C:\Users\<USER>\Desktop\<SCRIPT> -> Run a pykd script.

(From command prompt, duh): netstat -anbp -> Can be useful for determining if the program is opening ports back to the attacking system.

lm f -> get the filenames of all loaded modules.